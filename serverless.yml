service: melt-api

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  logRetentionInDays: 30
  timeout: 20
  versionFunctions: false
  lambdaHashingVersion: 20201221
  environment:
    KEY_TABLE_NAME: ${self:custom.environment.${self:provider.stage}.aws.dynamodb.api_keys.table_name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::melt-storage/*"
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:ap-northeast-1:*:*"
  httpApi:
    cors: true

plugins:
  - serverless-domain-manager
  - serverless-s3-local
  - serverless-offline

custom:
  defaultStage: dev
  environment:
    local: ${file(./config/local.yml)}
    dev: ${file(./config/development.yml)}
    prod: ${file(./config/production.yml)}
  customDomain:
    domainName: ${self:custom.environment.${self:provider.stage}.domain}
    basePath: ""
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: regional
    apiType: http

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  apps: ${file(./functions/apps/function.yml)}
  sites: ${file(./functions/sites/function.yml)}
  images: ${file(./functions/images/function.yml)}
