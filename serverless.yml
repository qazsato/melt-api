service: melt-api

frameworkVersion: '3'

provider:
  name: aws
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.defaultStage}
  runtime: nodejs20.x
  architecture: arm64
  memorySize: 1024
  timeout: 20
  logRetentionInDays: 30
  versionFunctions: false
  environment:
    TZ: Asia/Tokyo
    KEY_TABLE_NAME: ${self:custom.environment.${self:provider.stage}.aws.dynamodb.api_keys.table_name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: 'arn:aws:s3:::melt-storage/*'
    - Effect: 'Allow'
      Action:
        - dynamodb:GetItem
      Resource: 'arn:aws:dynamodb:ap-northeast-1:*:*'
  httpApi:
    cors: true

plugins:
  - serverless-domain-manager
  - serverless-esbuild
  - serverless-s3-local
  - serverless-offline

custom:
  defaultStage: dev
  environment:
    local: ${file(./config/local.yml)}
    dev: ${file(./config/development.yml)}
    prod: ${file(./config/production.yml)}
  esbuild:
    bundle: true
    minify: true
    exclude: []

  customDomain:
    domainName: ${self:custom.environment.${self:provider.stage}.domain}
    autoDomain: true
    endpointType: regional
    apiType: http

functions:
  apps: ${file(./functions/apps/function.yml)}
  sites: ${file(./functions/sites/function.yml)}
  images: ${file(./functions/images/function.yml)}
